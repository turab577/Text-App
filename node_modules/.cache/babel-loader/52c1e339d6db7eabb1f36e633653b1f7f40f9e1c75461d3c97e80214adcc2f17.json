{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\react.js\\\\Textapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/textForm\";\nimport About from \"./components/About\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = message => {\n    setAlert({\n      msg: message\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n  const toggleMode = cls => {\n    document.body.addClass;\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#212529\";\n      showAlert(\"Dark mode activated\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode activated\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TextUtils\",\n        about: \"About us\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-5\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(About, {\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(TextForm, {\n              showAlert: showAlert,\n              heading: \"Enter the text to analyze\",\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TextForm, {\n      showAlert: showAlert,\n      heading: \"Enter the text to analyze\",\n      mode: mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"0HOcw1k7gBoZtgDKz+uDOLkRLtw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","TextForm","About","Alert","BrowserRouter","Router","Routes","Route","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","msg","setTimeout","toggleMode","cls","document","body","addClass","style","backgroundColor","children","title","about","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","heading","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/react.js/Textapp/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/textForm\";\nimport About from \"./components/About\";\nimport Alert from \"./components/Alert\";\nimport {BrowserRouter as Router, Routes, Route, Link} from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message) => {\n    setAlert({\n      msg: message\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n\n\n\n\n\n  const toggleMode = (cls) => {\n    document.body.addClass\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#212529\";\n      showAlert(\"Dark mode activated\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode activated\");\n    }\n  };\n\n  return (\n    <>\n    <Router>\n    <Navbar\n        title=\"TextUtils\"\n        about=\"About us\"\n        mode={mode}\n        toggleMode={toggleMode} \n      />\n      <Alert alert={alert} />\n\n\n      <div className=\"container my-5\">\n    <Routes>\n\n<Route path = \"/about\" element = {<About mode = {mode}/>}/>\n\n  <Route path = \"/\" element = {<TextForm showAlert = {showAlert} heading=\"Enter the text to analyze\" mode={mode} />}/>\n\n</Routes>\n      </div>\n    </Router>\n    <TextForm showAlert = {showAlert} heading=\"Enter the text to analyze\" mode={mode} />\n    \n         \n          \n         \n\n      \n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}