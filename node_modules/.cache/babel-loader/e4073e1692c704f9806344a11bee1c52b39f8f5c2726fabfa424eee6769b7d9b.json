{"ast":null,"code":"import React,{useState}from\"react\";import Navbar from\"./components/Navbar\";import TextForm from\"./components/textForm\";import About from\"./components/About\";import Alert from\"./components/Alert\";import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[mode,setMode]=useState(\"light\");const[alert,setAlert]=useState(null);const showAlert=message=>{setAlert({msg:message});setTimeout(()=>{setAlert(null);},1000);};const toggleMode=()=>{if(mode===\"light\"){setMode(\"dark\");document.body.style.backgroundColor=\"#212529\";showAlert(\"Dark mode activated\");}else{setMode(\"light\");document.body.style.backgroundColor=\"white\";showAlert(\"Light mode activated\");}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"TextUtils\",about:\"About us\",mode:mode,toggleMode:toggleMode// Ensure this prop name matches the function name\n}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-5\",children:/*#__PURE__*/_jsx(TextForm,{showAlert:showAlert,heading:\"Enter the text to analyze\",mode:mode})})]});}export default App;","map":{"version":3,"names":["React","useState","Navbar","TextForm","About","Alert","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","mode","setMode","alert","setAlert","showAlert","message","msg","setTimeout","toggleMode","document","body","style","backgroundColor","children","title","about","className","heading"],"sources":["C:/Users/DELL/Desktop/react.js/Textapp/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/textForm\";\nimport About from \"./components/About\";\nimport Alert from \"./components/Alert\";\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message) => {\n    setAlert({\n      msg: message,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#212529\";\n      showAlert(\"Dark mode activated\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode activated\");\n    }\n  };\n\n  return (\n    <>\n      <Navbar\n        title=\"TextUtils\"\n        about=\"About us\"\n        mode={mode}\n        toggleMode={toggleMode} // Ensure this prop name matches the function name\n      />\n      <Alert alert={alert} />\n      <div className=\"container my-5\">\n    \n         \n          <TextForm showAlert = {showAlert} heading=\"Enter the text to analyze\" mode={mode} />\n          \n         \n      </div>\n      \n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGvC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAC,OAAO,CAAC,CACzC,KAAM,CAACc,KAAK,CAAEC,QAAQ,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAAAgB,SAAS,CAAIC,OAAO,EAAK,CAC7BF,QAAQ,CAAC,CACPG,GAAG,CAAED,OACP,CAAC,CAAC,CACFE,UAAU,CAAC,IAAM,CACfJ,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED,KAAM,CAAAK,UAAU,CAAGA,CAAA,GAAM,CACvB,GAAIR,IAAI,GAAK,OAAO,CAAE,CACpBC,OAAO,CAAC,MAAM,CAAC,CACfQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CAC/CR,SAAS,CAAC,qBAAqB,CAAC,CAClC,CAAC,IAAM,CACLH,OAAO,CAAC,OAAO,CAAC,CAChBQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7CR,SAAS,CAAC,sBAAsB,CAAC,CACnC,CACF,CAAC,CAED,mBACEN,KAAA,CAAAF,SAAA,EAAAiB,QAAA,eACEnB,IAAA,CAACL,MAAM,EACLyB,KAAK,CAAC,WAAW,CACjBC,KAAK,CAAC,UAAU,CAChBf,IAAI,CAAEA,IAAK,CACXQ,UAAU,CAAEA,UAAY;AAAA,CACzB,CAAC,cACFd,IAAA,CAACF,KAAK,EAACU,KAAK,CAAEA,KAAM,CAAE,CAAC,cACvBR,IAAA,QAAKsB,SAAS,CAAC,gBAAgB,CAAAH,QAAA,cAG3BnB,IAAA,CAACJ,QAAQ,EAACc,SAAS,CAAIA,SAAU,CAACa,OAAO,CAAC,2BAA2B,CAACjB,IAAI,CAAEA,IAAK,CAAE,CAAC,CAGnF,CAAC,EAEN,CAAC,CAEP,CAEA,cAAe,CAAAD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}